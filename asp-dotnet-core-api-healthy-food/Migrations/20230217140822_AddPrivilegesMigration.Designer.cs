// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using asp_dotnet_core_api_healthy_food.Data;

#nullable disable

namespace asp_dotnet_core_api_healthy_food.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230217140822_AddPrivilegesMigration")]
    partial class AddPrivilegesMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("asp_dotnet_core_api_healthy_food.Data.Privileges", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("privileges");
                });

            modelBuilder.Entity("asp_dotnet_core_api_healthy_food.Data.Role", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("asp_dotnet_core_api_healthy_food.Data.User", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("PrivilegesRole", b =>
                {
                    b.Property<Guid>("privilegesid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("rolesid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("privilegesid", "rolesid");

                    b.HasIndex("rolesid");

                    b.ToTable("PrivilegesRole");
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<Guid>("rolesid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("usersid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("rolesid", "usersid");

                    b.HasIndex("usersid");

                    b.ToTable("RoleUser");
                });

            modelBuilder.Entity("PrivilegesRole", b =>
                {
                    b.HasOne("asp_dotnet_core_api_healthy_food.Data.Privileges", null)
                        .WithMany()
                        .HasForeignKey("privilegesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("asp_dotnet_core_api_healthy_food.Data.Role", null)
                        .WithMany()
                        .HasForeignKey("rolesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("asp_dotnet_core_api_healthy_food.Data.Role", null)
                        .WithMany()
                        .HasForeignKey("rolesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("asp_dotnet_core_api_healthy_food.Data.User", null)
                        .WithMany()
                        .HasForeignKey("usersid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
